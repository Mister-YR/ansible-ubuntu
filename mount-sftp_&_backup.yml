---
- hosts: all
  gather_facts: true
  become: true
  ignore_errors: true

  tasks:
 # - name: mount sshfs permanently
 #   mount:
 #     name: /mnt/sshftps/
 #     src: root@192.168.168.13:/data/sf-awx-bcp-user/bcp-linux:/
 #     fstype: fuse.sshfs
 #     opts:
 #       "rw,noexec,nosuid,nodev,idmap=user,
 #       follow_symlinks,allow_other,
 #       default_permissions,uid=1000,gid=1000"
 #     state: present
 #   tags: mount
  - name: Unmount (fusermount) Media Directory
    command: fusermount -u {{ 192.168.168.13:/data/sf-awx-bcp-user/bcp-linux/ /mnt/sshftps/}}
    become: yes
    ignore_errors: yes
  
 # - name: add record to sftab
 #   lineinfile:
 #     path: "/etc/fstab"
 #     line: "#mount sftp"
 #    line: "192.168.168.13:/data/sf-awx-bcp-user/bcp-linux /mnt/sshftps/ fuse.sshfs defaults 0 0"
      
 
 # - name: remount website
 #   command: curlftpfs root@192.168.168.13:/data/sf-awx-bcp-user/bcp-linux /mnt/sshftps
  #  raw: 'sudo sshfs root@192.168.168.13:/data/sf-awx-bcp-user/bcp-linux /mnt/sshftps'
 #   args:
#     warn: no
#    mount:
#      path: /mnt/sshftps/
#     src: root@192.168.168.13:/data/sf-awx-bcp-user/bcp-linux
#      fstype: fuse.sshfs
#      state: mounted
#   register: result
##    
# - name: Print return information from the previous task
#    ansible.builtin.debug:
#      var: result
#      verbosity: 2
  #- name: mount sftp
  #  expect:
  #     raw: 'mount -av'
  #    command: bash -c "trap '' HUP; sshfs -o reconnect,nonempty,allow_other,idmap=root root@192.168.168.13:/data/sf-awx-bcp-user/bcp-linux /mnt/sshftps"
  #  local_action: shell echo root | sshfs root@192.168.168.13:/data/sf-awx-bcp-user/bcp-linux /mnt/sshftps
  # shell echo root123 | sshfs -o password_stdin,reconnect,nonempty,allow_other,idmap=user stack@10.1.1.1:/home/stack /mnt/server1  
    
  #- name: mount sftp via shell *without reboot*
  #  raw: sudo mount -av

  #- name: create baremetal backup via dd to /nmt/sshftps
  #  shell: sudo dd if=/dev/sda conv=sync,noerror bs=64K | gzip -c  > /mnt/sshftps/{{ ansible_facts['nodename'] }}-{{ ansible_date_time.date }}.img.gz

  #- name: unmount sftp after backup
  #  shell: 'umount /mnt/sshftps'
